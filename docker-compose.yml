version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ytorsweb_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ytorsweb
      POSTGRES_USER: ytors
      POSTGRES_PASSWORD: Thereisnospoon31827
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/postgres_schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - ytorsweb_network

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: ytorsweb_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ytorsweb_network

  # Основное приложение
  app:
    build: .
    container_name: ytorsweb_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_TYPE: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ytorsweb
      POSTGRES_USER: ytors
      POSTGRES_PASSWORD: Thereisnospoon31827
      JWT_SECRET: 9d1e1f947ac74f8a7f57f3897de43a1a3fc5086ad91662fc87bb048dec235b38114edb0f654468eb720012d4d071deb5e62d5cfa13661c533df14d92f1174e8d
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin31827
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/backups:/app/backups
    networks:
      - ytorsweb_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: ytorsweb_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./server/uploads:/var/www/uploads
    depends_on:
      - app
    networks:
      - ytorsweb_network

volumes:
  postgres_data:
  redis_data:

networks:
  ytorsweb_network:
    driver: bridge

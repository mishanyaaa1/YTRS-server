import React from 'react';
import { motion } from 'framer-motion';
import {
  FaMapMarkerAlt,
  FaPhone,
  FaEnvelope,
  FaClock,
  FaTools,
  FaTruck,
  FaStore,
  FaShippingFast,
  FaCreditCard,
  FaShieldAlt,
  FaFileInvoice,
  FaUniversity,
  FaCcVisa,
  FaCcMastercard,
  FaMoneyBillWave
} from 'react-icons/fa';
import { useAdminData } from '../context/AdminDataContext';
import './About.css';
import { getIconForEmoji } from '../utils/iconMap.jsx';
import Reveal from '../components/Reveal';

export default function About() {
  const { aboutContent } = useAdminData();

  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ (–µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ –∞–¥–º–∏–Ω–∫–µ)
  const defaultAdvantages = [
    {
      icon: "üöö",
      title: "–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞",
      description: "–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏. –≠–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ –∏ –æ–±–ª–∞—Å—Ç–∏."
    },
    {
      icon: "üí∞",
      title: "–í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã",
      description: "–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã. –°–∫–∏–¥–∫–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ–ø—Ç–æ–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π."
    },
    {
      icon: "üîß",
      title: "–®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç",
      description: "–ë–æ–ª–µ–µ 15000 –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π –∑–∞–ø—á–∞—Å—Ç–µ–π –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∏ –º–∞—Ä–æ–∫ –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤."
    },
    {
      icon: "‚úÖ",
      title: "–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞",
      description: "–ü–æ–ª–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. –û–±–º–µ–Ω—è–µ–º –∏–ª–∏ –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏ –≤ —Å–ª—É—á–∞–µ –±—Ä–∞–∫–∞."
    }
  ];

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –∞–¥–º–∏–Ω–∫–∏ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const team = aboutContent.team && aboutContent.team.members && aboutContent.team.members.length > 0 
    ? aboutContent.team.members 
    : [
        {
          name: "–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤",
          position: "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
          experience: "15 –ª–µ—Ç –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏",
          photo: "üë®‚Äçüíº",
          description: "–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å –∫–æ–º–ø–∞–Ω–∏–∏, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–µ–∑–¥–µ—Ö–æ–¥–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–µ"
        },
        {
          name: "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞",
          position: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
          experience: "12 –ª–µ—Ç —Ä–∞–±–æ—Ç—ã —Å –≤–µ–∑–¥–µ—Ö–æ–¥–∞–º–∏",
          photo: "üë©‚Äçüîß",
          description: "–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É –∏ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏"
        },
        {
          name: "–î–º–∏—Ç—Ä–∏–π –ò–≤–∞–Ω–æ–≤",
          position: "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º",
          experience: "8 –ª–µ—Ç –≤ —Å—Ñ–µ—Ä–µ –∑–∞–ø—á–∞—Å—Ç–µ–π",
          photo: "üë®‚Äçüíª",
          description: "–ü–æ–º–æ–≥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏ –∏ —Ä–µ—à–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã"
        }
      ];

  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ñ–∏—á–∏ (–µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ –∞–¥–º–∏–Ω–∫–µ)
  const defaultFeatures = [
    {
      icon: "‚≠ê",
      title: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
      description: "–ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ–º–æ–≥—É—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–µ –∑–∞–ø—á–∞—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Ö–æ–¥—è—Ç –≤–∞—à–µ–º—É –≤–µ–∑–¥–µ—Ö–æ–¥—É."
    },
    {
      icon: "üõ°Ô∏è",
      title: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è",
      description: "–ù–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –¥–æ 2 –ª–µ—Ç."
    },
    {
      icon: "üéØ",
      title: "–¢–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–±–æ—Ä–∞",
      description: "–ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞—à–µ–º—É –æ–ø—ã—Ç—É, –º—ã —Ç–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–º –Ω—É–∂–Ω—É—é –¥–µ—Ç–∞–ª—å –ø–æ VIN-–∫–æ–¥—É –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏."
    }
  ];

  const contactsData = aboutContent.contacts || {};
  const contacts = [
    {
      icon: <FaMapMarkerAlt />,
      title: "–ê–¥—Ä–µ—Å",
      info: contactsData.address || "40-–ª–µ—Ç–∏—è –ü–æ–±–µ–¥—ã, 16–∞, –ö—É—Ä—á–∞—Ç–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω, –ß–µ–ª—è–±–∏–Ω—Å–∫, 454100",
      link: "#"
    },
    {
      icon: <FaPhone />,
      title: "–¢–µ–ª–µ—Ñ–æ–Ω",
      info: contactsData.phone || "+7 (800) 123-45-67",
      link: `tel:${contactsData.phone || '+78001234567'}`
    },
    {
      icon: <FaEnvelope />,
      title: "Email",
      info: contactsData.email || "info@vezdehod-zapchasti.ru",
      link: `mailto:${contactsData.email || 'info@vezdehod-zapchasti.ru'}`
    },
    {
      icon: <FaClock />,
      title: "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
      info: contactsData.workingHours || "–ü–Ω-–ü—Ç: 9:00-18:00, –°–±: 10:00-16:00",
      link: null
    }
  ];

  const getDeliveryIcon = (title) => {
    const lower = (title || '').toLowerCase();
    if (lower.includes('—Å–∞–º–æ–≤—ã–≤–æ–∑')) return <FaStore />;
    if (lower.includes('–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è')) return <FaTruck />;
    if (lower.includes('—Ä–æ—Å—Å–∏–∏') || lower.includes('—Å–Ω–≥') || lower.includes('–¥–æ—Å—Ç–∞–≤–∫–∞')) return <FaShippingFast />;
    return <FaTruck />;
  };

  return (
    <div className="about-page">
      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <section className="about-hero">
        <div className="container">
          <Reveal type="up">
            <div className="hero-content">
              <h1 className="about-title">
                {(() => {
                  const title = aboutContent.title || "–û –∫–æ–º–ø–∞–Ω–∏–∏ –Æ–¢–û–†–°";
                  if (title.includes('\n')) {
                    return title.split('\n').map((line, index) => (
                      <span key={index} style={{ display: 'block' }}>
                        {line}
                      </span>
                    ));
                  }
                  return title;
                })()}
              </h1>
              <div className="about-description" style={{ whiteSpace: 'pre-line' }}>
                {aboutContent.description || "–ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—á–∞—Å—Ç–µ–π –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∏ –º–∞—Ä–æ–∫. –ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤–∞—Å –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–º–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –≤–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏."}
              </div>
            </div>
          </Reveal>
        </div>
      </section>

      {/* –ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      <section className="advantages">
        <div className="container">
          <motion.h2 
            className="section-title"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            –ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
          </motion.h2>
          
          <div className="advantages-grid">
            {(aboutContent.advantages && aboutContent.advantages.length > 0 ? aboutContent.advantages : defaultAdvantages).map((advantage, index) => (
              <motion.div 
                key={index}
                className="advantage-card"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                whileHover={{ y: -5 }}
              >
                <div className="advantage-icon">
                  {typeof advantage.icon === 'string' 
                    ? getIconForEmoji(advantage.icon)
                    : defaultAdvantages[index]?.icon}
                </div>
                <h3 className="advantage-title">
                  {(() => {
                    const title = advantage.title || advantage;
                    if (title.includes('\n')) {
                      return title.split('\n').map((line, index) => (
                        <span key={index} style={{ display: 'block' }}>
                          {line}
                        </span>
                      ));
                    }
                    return title;
                  })()}
                </h3>
                <p>{advantage.description || ''}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å */}
      <section className="features-section">
        <div className="container">
          <motion.h2 
            className="section-title"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å
          </motion.h2>
          
          <div className="features-grid">
            {(aboutContent.whyChooseUs && aboutContent.whyChooseUs.length > 0 ? aboutContent.whyChooseUs : defaultFeatures).map((feature, index) => (
              <motion.div 
                key={index}
                className="feature-item"
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: index * 0.2 }}
                viewport={{ once: true }}
              >
                <div className="feature-icon">
                  {typeof feature.icon === 'string' 
                    ? getIconForEmoji(feature.icon)
                    : defaultFeatures[index]?.icon}
                </div>
                <div className="feature-content">
                  <h3 className="feature-title">
                    {(() => {
                      const title = feature.title;
                      if (title.includes('\n')) {
                        return title.split('\n').map((line, index) => (
                          <span key={index} style={{ display: 'block' }}>
                            {line}
                          </span>
                        ));
                      }
                      return title;
                    })()}
                  </h3>
                  <p>{feature.description}</p>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ */}
      <section className="team-section">
        <div className="container">
          <motion.h2 
            className="section-title"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            {aboutContent.team?.title || '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞'}
          </motion.h2>
          
          <div className="team-grid">
            {team.map((member, index) => (
              <motion.div 
                key={index}
                className="team-card"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                whileHover={{ y: -5 }}
              >
                <div className="member-photo">
                  {member.photo && member.photo.startsWith('data:image') ? (
                    <img src={member.photo} alt={member.name} className="member-photo-img" />
                  ) : (
                    <span className="member-photo-emoji">{member.photo || "üë§"}</span>
                  )}
                </div>
                <h3>{member.name}</h3>
                <p className="member-position">{member.position}</p>
                <p className="member-experience">{member.experience}</p>
                {member.description && (
                  <p className="member-description">{member.description}</p>
                )}
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* –û –Ω–∞—Å –ø–æ–¥—Ä–æ–±–Ω–µ–µ */}
      <section className="company-story">
        <div className="container">
          <motion.h2 
            className="section-title"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            {aboutContent.history?.title || "–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–ø–∞–Ω–∏–∏"}
          </motion.h2>
          
          <motion.div 
            className="history-timeline"
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <div className="timeline-description">
              <p>
                {aboutContent.history?.content || 
                  "–ö–æ–º–ø–∞–Ω–∏—è –Æ–¢–û–†–° –±—ã–ª–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –≤ 2013 –≥–æ–¥—É –≥—Ä—É–ø–ø–æ–π —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, —É–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –≤–µ–∑–¥–µ—Ö–æ–¥–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π. –ù–∞—á–∞–≤ —Å –Ω–µ–±–æ–ª—å—à–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –ú–æ—Å–∫–≤–µ, –º—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä–∏–ª–∏ —Å–≤–æ—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å–µ–≥–æ–¥–Ω—è —è–≤–ª—è–µ–º—Å—è –æ–¥–Ω–∏–º –∏–∑ –≤–µ–¥—É—â–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∑–∞–ø—á–∞—Å—Ç–µ–π –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤ –≤ –†–æ—Å—Å–∏–∏."
                }
              </p>
            </div>
            
            <div className="timeline-steps">
              {(() => {
                const milestones = aboutContent.history?.milestones && aboutContent.history.milestones.items && aboutContent.history.milestones.items.length > 0 
                  ? aboutContent.history.milestones.items 
                  : [];
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –≤ —Å–µ—Ç–∫–µ (–∑–º–µ–π–∫–∞)
                const getStepPosition = (index, totalSteps) => {
                  const stepsPerRow = 3;
                  const row = Math.floor(index / stepsPerRow);
                  const col = index % stepsPerRow;
                  
                  // –ï—Å–ª–∏ —Ä—è–¥ —á–µ—Ç–Ω—ã–π (0, 2, 4...) - –∏–¥–µ–º —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ
                  if (row % 2 === 1) {
                    return { row: row + 1, col: stepsPerRow - col };
                  }
                  
                  // –ï—Å–ª–∏ —Ä—è–¥ –Ω–µ—á–µ—Ç–Ω—ã–π (1, 3, 5...) - –∏–¥–µ–º —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
                  return { row: row + 1, col: col + 1 };
                };
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ–ª–æ—á–∫–∏ (–∑–º–µ–π–∫–∞)
                const getArrowDirection = (index, totalSteps) => {
                  const stepsPerRow = 3;
                  const row = Math.floor(index / stepsPerRow);
                  const col = index % stepsPerRow;
                  
                  // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—É–Ω–∫—Ç - —Å—Ç—Ä–µ–ª–æ—á–∫–∏ –Ω–µ—Ç
                  if (index === totalSteps - 1) return 'none';
                  
                  // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—É–Ω–∫—Ç –≤ —Ä—è–¥—É - —Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑
                  if (col === stepsPerRow - 1) return 'down';
                  
                  // –ï—Å–ª–∏ —Ä—è–¥ —á–µ—Ç–Ω—ã–π (0, 2, 4...) - —Å—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ
                  if (row % 2 === 1) return 'left';
                  
                  // –ï—Å–ª–∏ —Ä—è–¥ –Ω–µ—á–µ—Ç–Ω—ã–π (1, 3, 5...) - —Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ
                  return 'right';
                };
                
                // –ï—Å–ª–∏ –Ω–µ—Ç —ç—Ç–∞–ø–æ–≤ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏—á–µ–≥–æ
                if (milestones.length === 0) {
                  return null;
                }
                
                return milestones.map((milestone, index) => {
                  const isLastStep = index === milestones.length - 1;
                  const position = getStepPosition(index, milestones.length);
                  const arrowDirection = getArrowDirection(index, milestones.length);
                  
                  return (
                    <motion.div 
                      key={index}
                      className={`timeline-step step-${index + 1} ${isLastStep ? 'last-step' : ''} arrow-${arrowDirection}`}
                      style={{
                        gridColumn: position.col,
                        gridRow: position.row
                      }}
                      initial={{ opacity: 0, scale: 0.8 }}
                      whileInView={{ opacity: 1, scale: 1 }}
                      transition={{ duration: 0.6, delay: index * 0.2 }}
                      viewport={{ once: true }}
                      whileHover={{ scale: 1.05 }}
                    >
                      <div className="step-number">{index + 1}</div>
                      <div className="step-content">
                        <div className="step-year">{milestone.year}</div>
                        <h3 className="step-title">{milestone.title}</h3>
                        <p className="step-description">{milestone.description}</p>
                      </div>
                    </motion.div>
                  );
                });
              })()}
            </div>
          </motion.div>
        </div>
      </section>

      {/* –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞ */}
      <section className="delivery-payment" id="delivery">
        <div className="container">
          <motion.h2
            className="section-title"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞
          </motion.h2>

          {/* –®–∞–≥–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ */}
          <div className="steps-grid">
            {(aboutContent.deliveryAndPayment?.steps || []).map((step, index) => (
              <motion.div
                key={index}
                className="step-card"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                viewport={{ once: true }}
                whileHover={{ y: -4 }}
              >
                <div className="step-number">{index + 1}</div>
                <h3 className="step-title">{step.title}</h3>
                <p className="step-text">{step.description}</p>
              </motion.div>
            ))}
          </div>

          {/* –°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏ */}
          {aboutContent.deliveryAndPayment?.deliveryMethods && (
            <div className="delivery-methods">
              <h3>–°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
              <div className="methods-grid advantages-grid">
                {aboutContent.deliveryAndPayment.deliveryMethods.map((method, i) => (
                  <motion.div
                    key={i}
                    className="advantage-card method-card"
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: i * 0.1 }}
                    viewport={{ once: true }}
                    whileHover={{ y: -4 }}
                  >
                    <div className="advantage-icon">{getDeliveryIcon(method.title)}</div>
                    <h4>{method.title}</h4>
                    {method.description && (
                      <p className="method-description">{method.description}</p>
                    )}
                    {Array.isArray(method.items) && method.items.length > 0 && (
                      <ul className="method-list">
                        {method.items.map((it, idx) => (
                          <li key={idx}>{it}</li>
                        ))}
                      </ul>
                    )}
                  </motion.div>
                ))}
              </div>
              {aboutContent.deliveryAndPayment.deliveryNote && (
                <p className="delivery-note">{aboutContent.deliveryAndPayment.deliveryNote}</p>
              )}
            </div>
          )}

          {/* –û–ø–ª–∞—Ç–∞ */}
          {aboutContent.deliveryAndPayment?.payment && (
            <div className="payment-section">
              <h3>–û–ø–ª–∞—Ç–∞</h3>
              <div className="payment-cards advantages-grid">
                <div className="advantage-card payment-card">
                  <div className="advantage-icon"><FaMoneyBillWave /></div>
                  <h4>–ü–æ—á–µ–º—É –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞</h4>
                  <p>{aboutContent.deliveryAndPayment.payment.whyPrepay}</p>
                  {aboutContent.deliveryAndPayment.payment.whyPrepayExtra && (
                    <p>{aboutContent.deliveryAndPayment.payment.whyPrepayExtra}</p>
                  )}
                </div>
                <div className="advantage-card payment-card">
                  <div className="advantage-icon"><FaShieldAlt /></div>
                  <h4>–ì–∞—Ä–∞–Ω—Ç–∏–∏ —á–µ—Å—Ç–Ω–æ–π —Å–¥–µ–ª–∫–∏</h4>
                  <p>{aboutContent.deliveryAndPayment.payment.trust}</p>
                  {aboutContent.deliveryAndPayment.payment.trustExtra && (
                    <p>{aboutContent.deliveryAndPayment.payment.trustExtra}</p>
                  )}
                </div>
                <div className="advantage-card payment-card">
                  <div className="advantage-icon"><FaFileInvoice /></div>
                  <h4>–†–µ–∫–≤–∏–∑–∏—Ç—ã</h4>
                  <p className="requisites-text">{aboutContent.deliveryAndPayment.payment.requisites}</p>
                </div>
              </div>
              <div className="payment-logos" aria-hidden>
                <span className="logo"><FaCcVisa /></span>
                <span className="logo"><FaCcMastercard /></span>
                <span className="logo"><FaUniversity /></span>
                <span className="logo"><FaCreditCard /></span>
              </div>
            </div>
          )}
        </div>
      </section>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
      <section className="contacts-section" id="contacts">
        <div className="container">
          <motion.h2 
            className="section-title"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            –ö–æ–Ω—Ç–∞–∫—Ç—ã
          </motion.h2>
          
          <div className="contacts-grid">
            {contacts.map((contact, index) => (
              <motion.div 
                key={index}
                className="contact-card"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                whileHover={{ y: -5 }}
                onClick={() => {
                  if (contact.title === "–ê–¥—Ä–µ—Å") {
                    window.open('https://yandex.ru/maps/org/yutors/164193756613/?indoorLevel=1&ll=61.295870%2C55.187646&z=17', '_blank');
                  } else if (contact.link) {
                    window.open(contact.link, '_blank');
                  }
                }}
                style={{ cursor: contact.link || contact.title === "–ê–¥—Ä–µ—Å" ? 'pointer' : 'default' }}
              >
                <div className="contact-icon">
                  {contact.icon}
                </div>
                <h3>{contact.title}</h3>
                <p className="contact-info">{contact.info}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { FaArrowLeft, FaShoppingCart, FaCheckCircle, FaTimesCircle, FaChevronLeft, FaChevronRight } from 'react-icons/fa';
import { motion } from 'framer-motion';
import Reveal from '../components/Reveal';
import { useCartActions } from '../hooks/useCartActions';
import { useAdminData } from '../context/AdminDataContext';
import { migrateProductImages, getAllImages, isImageUrl } from '../utils/imageHelpers';
import BrandMark from '../components/BrandMark';
import ImageModal from '../components/ImageModal';
import './ProductPage.css';

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–∞)
const productsData = {
  1: {
    id: 1,
    title: '–ì—É—Å–µ–Ω–∏—Ü—ã –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–∞',
    price: 45000,
    originalPrice: 50000,
    category: '–•–æ–¥–æ–≤–∞—è',
    brand: '–í–µ–∑–¥–µ—Ö–æ–¥-–ú–∞—Å—Ç–µ—Ä',
    available: true,
    inStock: 12,
    icon: 'üîó',
    images: ['/api/placeholder/600/400', '/api/placeholder/600/400', '/api/placeholder/600/400'],
    description: '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≥—É—Å–µ–Ω–∏—Ü—ã –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–æ–∫. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –∏–∑ –ø—Ä–æ—á–Ω–æ–π —Ä–µ–∑–∏–Ω—ã —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏. –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ–µ —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.',
    specifications: {
      '–®–∏—Ä–∏–Ω–∞': '400 –º–º',
      '–î–ª–∏–Ω–∞': '2500 –º–º',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–†–µ–∑–∏–Ω–∞ —Å –º–µ—Ç–∞–ª–ª–æ–∫–æ—Ä–¥–æ–º',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '12 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–í—ã—Å–æ–∫–∞—è –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å',
      '–û—Ç–ª–∏—á–Ω–æ–µ —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ —Å–Ω–µ–≥—É –∏ –≥—Ä—è–∑–∏',
      '–ü—Ä–æ—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤'
    ]
  },
  2: {
    id: 2,
    title: '–î–≤–∏–≥–∞—Ç–µ–ª—å 2.0L',
    price: 180000,
    category: '–î–≤–∏–≥–∞—Ç–µ–ª—å',
    brand: '–¢–µ—Ö–Ω–æ–ú–æ—Ç–æ—Ä',
    available: true,
    inStock: 3,
    icon: '‚öôÔ∏è',
    images: ['/api/placeholder/600/400', '/api/placeholder/600/400'],
    description: '–ú–æ—â–Ω—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å –æ–±—ä–µ–º–æ–º 2.0 –ª–∏—Ç—Ä–∞ –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤. –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –≤—ã—Å–æ–∫–æ–π —Ç–æ–ø–ª–∏–≤–Ω–æ–π —ç–∫–æ–Ω–æ–º–∏—á–Ω–æ—Å—Ç—å—é –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å—é.',
    specifications: {
      '–û–±—ä–µ–º': '2.0 –ª',
      '–ú–æ—â–Ω–æ—Å—Ç—å': '150 –ª.—Å.',
      '–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞': '–ë–µ–Ω–∑–∏–Ω',
      '–û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ': '–ñ–∏–¥–∫–æ—Å—Ç–Ω–æ–µ',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '24 –º–µ—Å—è—Ü–∞'
    },
    features: [
      '–í—ã—Å–æ–∫–∞—è –º–æ—â–Ω–æ—Å—Ç—å –∏ –∫—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç',
      '–≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞',
      '–ü—Ä–æ—Å—Ç–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–ù–∞–¥–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è'
    ]
  },
  3: {
    id: 3,
    title: '–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è',
    price: 95000,
    category: '–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è',
    brand: '–í–µ–∑–¥–µ—Ö–æ–¥-–ú–∞—Å—Ç–µ—Ä',
    available: false,
    inStock: 0,
    icon: 'üîß',
    images: ['/api/placeholder/600/400'],
    description: '–ù–∞–¥–µ–∂–Ω–∞—è —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è –¥–ª—è –≤–µ–∑–¥–µ—Ö–æ–¥–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–æ–∫. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á –∏ –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã.',
    specifications: {
      '–¢–∏–ø': '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è',
      '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞—á': '6',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–°—Ç–∞–ª—å –≤—ã—Å–æ–∫–æ–π –ø—Ä–æ—á–Ω–æ—Å—Ç–∏',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '18 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á',
      '–í—ã—Å–æ–∫–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å',
      '–ü—Ä–æ—Å—Ç–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
      '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π'
    ]
  },
  4: {
    id: 4,
    title: '–ü–æ–¥–≤–µ—Å–∫–∞',
    price: 65000,
    category: '–•–æ–¥–æ–≤–∞—è',
    brand: '–°—É–ø–µ—Ä–¢—Ä–µ–∫',
    available: true,
    inStock: 8,
    icon: 'üõ†Ô∏è',
    images: ['/api/placeholder/600/400', '/api/placeholder/600/400'],
    description: '–£—Å–∏–ª–µ–Ω–Ω–∞—è –ø–æ–¥–≤–µ—Å–∫–∞ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏. –ü–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç –µ–∑–¥—ã.',
    specifications: {
      '–¢–∏–ø': '–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è',
      '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã': '–ì–∞–∑–æ-–º–∞—Å–ª—è–Ω—ã–µ',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–°—Ç–∞–ª—å + –∞–ª—é–º–∏–Ω–∏–π',
      '–•–æ–¥ –ø–æ–¥–≤–µ—Å–∫–∏': '250 –º–º',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '12 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö–æ–¥ –ø–æ–¥–≤–µ—Å–∫–∏',
      '–£—Å–∏–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
      '–û—Ç–ª–∏—á–Ω–∞—è –∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è',
      '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π'
    ]
  },
  5: {
    id: 5,
    title: '–§–∏–ª—å—Ç—Ä –≤–æ–∑–¥—É—à–Ω—ã–π',
    price: 3500,
    category: '–î–≤–∏–≥–∞—Ç–µ–ª—å',
    brand: '–¢–µ—Ö–Ω–æ–ú–æ—Ç–æ—Ä',
    available: true,
    inStock: 25,
    icon: 'üåÄ',
    images: ['/api/placeholder/600/400'],
    description: '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã –¥–≤–∏–≥–∞—Ç–µ–ª—è –æ—Ç –ø—ã–ª–∏ –∏ –≥—Ä—è–∑–∏.',
    specifications: {
      '–¢–∏–ø': '–ü–∞–Ω–µ–ª—å–Ω—ã–π',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–°–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ–ª–æ–∫–Ω–æ',
      '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å': '99.5%',
      '–†–µ—Å—É—Ä—Å': '15 000 –∫–º',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '6 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–í—ã—Å–æ–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏',
      '–î–æ–ª–≥–∏–π —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã',
      '–ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞',
      '–ó–∞—â–∏—Ç–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è –æ—Ç –∏–∑–Ω–æ—Å–∞'
    ]
  },
  6: {
    id: 6,
    title: '–†–µ–º–µ–Ω—å –ø—Ä–∏–≤–æ–¥–Ω–æ–π',
    price: 2200,
    category: '–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è',
    brand: 'DrivePro',
    available: true,
    inStock: 15,
    icon: '‚õìÔ∏è',
    images: ['/api/placeholder/600/400'],
    description: '–ü—Ä–æ—á–Ω—ã–π –ø—Ä–∏–≤–æ–¥–Ω–æ–π —Ä–µ–º–µ–Ω—å –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –º–æ—â–Ω–æ—Å—Ç–∏ –æ—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è –∫ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏.',
    specifications: {
      '–î–ª–∏–Ω–∞': '1200 –º–º',
      '–®–∏—Ä–∏–Ω–∞': '30 –º–º',
      '–ú–∞—Ç–µ—Ä–∏–∞–ª': '–†–µ–∑–∏–Ω–∞ —Å –∫–µ–≤–ª–∞—Ä–æ–≤—ã–º –∫–æ—Ä–¥–æ–º',
      '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞': '150 –ù–º',
      '–ì–∞—Ä–∞–Ω—Ç–∏—è': '12 –º–µ—Å—è—Ü–µ–≤'
    },
    features: [
      '–í—ã—Å–æ–∫–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ä–∞–∑—Ä—ã–≤',
      '–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –∏–∑–Ω–æ—Å—É',
      '–†–∞–±–æ—Ç–∞ –≤ —à–∏—Ä–æ–∫–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä',
      '–ü—Ä–æ—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞'
    ]
  }
};

function ProductPage() {
  const { id } = useParams();
  const navigate = useNavigate();
  const { addToCartWithNotification } = useCartActions();
  const { products, categories, brands, filterSettings } = useAdminData();
  const [selectedImageIndex, setSelectedImageIndex] = useState(0);
  const [quantity, setQuantity] = useState(1);
  const [isImageModalOpen, setIsImageModalOpen] = useState(false);
  const [modalImageIndex, setModalImageIndex] = useState(0);
  // wishlist removed

  const product = products.find(p => p.id === parseInt(id));

  if (!product) {
    return (
      <div className="product-not-found">
        <h2>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <p>ID —Ç–æ–≤–∞—Ä–∞: {id}</p>
        <p>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {products.length}</p>
        <div className="product-not-found-actions">
          <button 
            onClick={() => window.location.reload()} 
            className="refresh-button"
          >
            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
          <button onClick={() => navigate('/catalog')} className="back-button">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
          </button>
        </div>
      </div>
    );
  }

  // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∏ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const migratedProduct = migrateProductImages(product);
  const allImages = getAllImages(migratedProduct) || [];
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ selectedImageIndex –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –º–∞—Å—Å–∏–≤–∞
  const safeSelectedIndex = Math.max(0, Math.min(selectedImageIndex, allImages.length - 1));

  const handleAddToCart = () => {
    addToCartWithNotification(product, quantity);
  };

  const handleBuyNow = () => {
    try {
      addToCartWithNotification(product, quantity);
      setTimeout(() => {
        navigate('/cart');
      }, 100);
    } catch (error) {
      console.error('Error in handleBuyNow:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const handleImageClick = () => {
    if (allImages && allImages.length > 0 && allImages[safeSelectedIndex]) {
      setModalImageIndex(safeSelectedIndex);
      setIsImageModalOpen(true);
    }
  };

  const handleCloseImageModal = () => {
    setIsImageModalOpen(false);
  };

  const handlePreviousImage = () => {
    setModalImageIndex(modalImageIndex === 0 ? allImages.length - 1 : modalImageIndex - 1);
  };

  const handleNextImage = () => {
    setModalImageIndex(modalImageIndex === allImages.length - 1 ? 0 : modalImageIndex + 1);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–∏–Ω–∏–∞—Ç—é—Ä–∞–º –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
  useEffect(() => {
    const handleImageModalNavigate = (event) => {
      setModalImageIndex(event.detail.index);
    };

    window.addEventListener('imageModalNavigate', handleImageModalNavigate);
    return () => {
      window.removeEventListener('imageModalNavigate', handleImageModalNavigate);
    };
  }, []);

  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ –æ–±—ä–µ–∫—Ç–∞, —Ç–∞–∫ –∏ –º–∞—Å—Å–∏–≤–∞ [{name, value}]
  const specsArray = Array.isArray(product?.specifications)
    ? (product.specifications || []).filter(s => s && (s.name || s.value))
    : (product?.specifications && typeof product.specifications === 'object')
      ? Object.entries(product.specifications).map(([name, value]) => ({ name, value }))
      : [];

  return (
    <motion.div 
      className="product-page"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
    >
      <div className="container">
        <button 
          onClick={() => navigate(-1)} 
          className="back-button"
        >
          <FaArrowLeft /> –ù–∞–∑–∞–¥
        </button>

        <div className="product-content">
          <div className="product-images">
            <div className="main-image">
              <motion.div 
                className="image-container"
                whileHover={{ scale: 1.05 }}
                transition={{ duration: 0.3 }}
                onClick={handleImageClick}
                style={{ cursor: 'pointer' }}
              >
                {allImages && allImages.length > 0 && allImages[safeSelectedIndex] ? (
                  allImages[safeSelectedIndex].data && (
                    allImages[safeSelectedIndex].data.startsWith('data:image') ||
                    isImageUrl(allImages[safeSelectedIndex].data)
                  ) ? (
                    <img
                      src={allImages[safeSelectedIndex].data}
                      alt={product.title}
                      className="product-main-image"
                    />
                  ) : (
                    <span className="product-icon" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                      <BrandMark alt={product.title} style={{ height: 200 }} />
                    </span>
                  )
                ) : (
                  <span className="product-icon" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    <BrandMark alt={product.title} style={{ height: 200 }} />
                  </span>
                )}
              </motion.div>
              
              {allImages && allImages.length > 1 && (
                <div className="image-navigation">
                  <button 
                    className="nav-button prev"
                    onClick={() => setSelectedImageIndex(selectedImageIndex === 0 ? allImages.length - 1 : selectedImageIndex - 1)}
                    disabled={!allImages || allImages.length <= 1}
                  >
                    <FaChevronLeft />
                  </button>
                  <button 
                    className="nav-button next"
                    onClick={() => setSelectedImageIndex(selectedImageIndex === allImages.length - 1 ? 0 : selectedImageIndex + 1)}
                    disabled={!allImages || allImages.length <= 1}
                  >
                    <FaChevronRight />
                  </button>
                </div>
              )}
            </div>
            
            {allImages && allImages.length > 1 && (
              <div className="image-thumbnails">
                {allImages.map((image, index) => (
                  <button
                    key={index}
                    className={`thumbnail ${selectedImageIndex === index ? 'active' : ''}`}
                    onClick={() => setSelectedImageIndex(index)}
                  >
                    {image && image.data && (
                      image.data.startsWith('data:image') || isImageUrl(image.data)
                    ) ? (
                      <img src={image.data} alt={`${product.title} ${index + 1}`} />
                    ) : (
                      <span className="product-icon" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                        <BrandMark alt={product.title} style={{ height: 40 }} />
                      </span>
                    )}
                  </button>
                ))}
              </div>
            )}
          </div>

          <div className="product-info">
            <div className="product-header">
              <h1>{product.title}</h1>
              {/* wishlist button removed */}
            </div>

            <div className="product-meta">
              {product.brand && product.brand.trim() && <span className="brand">{product.brand}</span>}
              <span className="category">{product.category}</span>
              <span className={`availability ${product.available ? 'in-stock' : 'out-of-stock'}`}>
                {product.available ? <FaCheckCircle /> : <FaTimesCircle />}
                {product.available ? `–í –Ω–∞–ª–∏—á–∏–∏: ${product.quantity || 0} —à—Ç` : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}
              </span>
            </div>

            <Reveal type="up">
              <div className="product-price">
                <span className="current-price">{product.price.toLocaleString()} ‚ÇΩ</span>
                {product.originalPrice && (
                  <span className="original-price">{product.originalPrice.toLocaleString()} ‚ÇΩ</span>
                )}
              </div>
            </Reveal>

            <Reveal type="up" delay={0.05}>
              <div className="product-description">
                {(() => {
                  if (product.description && product.description.includes('\n')) {
                    return product.description.split('\n').map((line, index) => (
                      <p key={index} style={{ margin: index > 0 ? '0.05em 0 0 0' : '0' }}>
                        {line}
                      </p>
                    ));
                  }
                  return <p>{product.description}</p>;
                })()}
              </div>
            </Reveal>

            {product.features && product.features.length > 0 && (
              <div className="product-features">
                <h3>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h3>
                <ul>
                  {product.features.map((feature, index) => (
                    <li key={index}>{feature}</li>
                  ))}
                </ul>
              </div>
            )}

            <Reveal type="up" delay={0.1}>
              <div className="product-actions">
                <div className="quantity-selector">
                  <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                  <div className="quantity-controls">
                    <button 
                      onClick={() => setQuantity(Math.max(1, quantity - 1))}
                      disabled={quantity <= 1}
                    >
                      -
                    </button>
                    <input 
                      type="text" 
                      value={quantity} 
                      onChange={(e) => {
                        const inputValue = e.target.value.replace(/[^0-9]/g, '');
                        // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ
                        if (inputValue === '') {
                          return;
                        }
                        const value = parseInt(inputValue);
                        if (!isNaN(value) && value >= 1) {
                          setQuantity(Math.min(value, product.quantity || 999));
                        }
                      }}
                      onBlur={(e) => {
                        // –ü—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, —Å—Ç–∞–≤–∏–º 1
                        const cleanValue = e.target.value.replace(/[^0-9]/g, '');
                        if (cleanValue === '' || parseInt(cleanValue) < 1) {
                          setQuantity(1);
                        }
                      }}
                      onFocus={(e) => e.target.select()}
                      placeholder="1"
                      className="quantity-input"
                    />
                    <button 
                      onClick={() => setQuantity(Math.min(quantity + 1, product.quantity || 999))}
                      disabled={quantity >= (product.quantity || 999)}
                    >
                      +
                    </button>
                  </div>
                </div>

                <div className="action-buttons">
                  <motion.button 
                    className="add-to-cart-btn"
                    onClick={handleAddToCart}
                    disabled={!product.available}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                  >
                    <FaShoppingCart /> –í –∫–æ—Ä–∑–∏–Ω—É
                  </motion.button>

                  <motion.button 
                    className="buy-now-btn"
                    onClick={handleBuyNow}
                    disabled={!product.available}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                  >
                    –ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å
                  </motion.button>
                </div>
              </div>
            </Reveal>
          </div>
        </div>

        {specsArray.length > 0 && (
          <Reveal type="up">
            <div className="product-specifications">
              <h3>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
              <div className="specs-grid">
                {specsArray.map((spec, idx) => (
                  <div key={idx} className="spec-item">
                    <span className="spec-label">{spec.name}:</span>
                    <span className="spec-value">{String(spec.value)}</span>
                  </div>
                ))}
              </div>
            </div>
          </Reveal>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageModal
        isOpen={isImageModalOpen}
        onClose={handleCloseImageModal}
        images={allImages}
        currentIndex={modalImageIndex}
        onPrevious={handlePreviousImage}
        onNext={handleNextImage}
        productTitle={product.title}
      />
    </motion.div>
  );
}

export default ProductPage;